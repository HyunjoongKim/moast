<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="memberManageMapper.xml">


	<sql id="BaseWhere">
		WHERE del_yn = 'N'
		AND site_code = #{site_code}		
	</sql>

	
	<sql id="MemberSelete" >
		me_idx	,
		me_id	,
		me_pwd	,
		me_name	,
		auth_code	,
		FN_AUTH_NAME(auth_code, site_code) AS auth_name,
		substring(me_latest_login, 1, 20) as me_latest_login,
		me_email	,
		me_tel	,
		me_email_yn	,
		atch_file_id,
		me_type	,
		FN_CODE_NAME('default',site_code,'814',me_type) AS me_type_nm,
		substring(cret_date, 1, 20) as cret_date
	</sql>
	
	<sql id="MemberWhere" >
		<if test="searchMeId != null and searchMeId !=''">
			<![CDATA[ AND  me_id LIKE CONCAT('%', #{searchMeId},'%')  ]]> 
		</if>
		<if test="searchMeName != null and searchMeName != ''">
			<![CDATA[ AND  me_name LIKE CONCAT('%', #{searchMeName},'%')  ]]> 
		</if>
		<if test="searchAuthCode != null and searchAuthCode != ''">
			<![CDATA[ AND  auth_code = #{searchAuthCode}	]]>
		</if>
		
		
		
		
		
		
	</sql>
	
	<!-- 회원 목록 -->
    <select id="MemberManageDAOgetMemberList" parameterType="MemberVO"  resultType="MemberVO">
		SELECT 
			<include refid="MemberSelete"/>
		FROM tbl_member
		<include refid="BaseWhere"/>
		<include refid="MemberWhere"/>
		<![CDATA[			
			Order by me_idx desc
			LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
		]]>				
	</select>	
	
	<!-- 회원 목록 cnt -->
	<select id="MemberManageDAOgetMemberListCnt" parameterType="MemberVO" resultType="java.lang.Integer" >
		SELECT 
			COUNT(*)
		FROM tbl_member 
		<include refid="BaseWhere"/>
		<include refid="MemberWhere"/>
	</select>
	
	<!-- 회원 등록 -->
	<insert id="MemberManageDAOinsertMemberVO" parameterType="MemberVO" >
		<![CDATA[
			INSERT INTO tbl_member
			( 
				me_id	,
				me_pwd	,
				me_name	,
				auth_code	,
				me_email	,
				me_tel	,
				me_email_yn	,
				atch_file_id	,
				me_type	,
				
				tmp_me_bth,
				me_postno,
				me_address1,
				me_address2,
				me_agency_type,
				me_agency,
				me_department,
				me_position,
				
				site_code	,
				cret_date	,
				cret_id		,
				cret_ip		,
				del_yn		
			)
			VALUES
			( 
				#{me_id},
				#{me_pwd},
				#{me_name},
				#{auth_code},
				#{me_email},
				#{me_tel},
				#{me_email_yn},
				#{atch_file_id},
				#{me_type}	,
				
				#{tmp_me_bth},
				#{me_postno},
				#{me_address1},
				#{me_address2},
				#{me_agency_type},
				#{me_agency},
				#{me_department},
				#{me_position},
				
				#{site_code}	,
				SYSDATE()	,
				#{cret_id}	,
				#{cret_ip}	,
				'N'			
			)			
		]]>
	</insert>
	
	<!-- 회원 조회 -->
    <select id="MemberManageDAOgetMemberVO" parameterType="MemberVO"  resultType="MemberVO">
		SELECT 
			<include refid="MemberSelete"/>	
		FROM tbl_member 
		<include refid="BaseWhere"/>
		AND me_idx = #{me_idx}
	</select>	
	
	<!-- 회원 수정 -->
	<update id="MemberManageDAOupdateMemberVO" parameterType="MemberVO">
		UPDATE tbl_member SET
			
			me_name		=	#{me_name},
			me_email	=	#{me_email},
			me_tel		=	#{me_tel},
			me_email_yn	=	#{me_email_yn},
			me_type		=	#{me_type},
						
			<if test="me_pwd != null and me_pwd != ''">
				me_pwd			=	#{me_pwd},
			</if>
			<if test="auth_code != null and auth_code != ''">
				auth_code		=	#{auth_code},
			</if>
			<if test="atch_file_id != null and atch_file_id != ''">
				atch_file_id		=	#{atch_file_id},
			</if>		
			
			tmp_me_bth = #{tmp_me_bth},
			me_postno = #{me_postno},
			me_address1 = #{me_address1},
			me_address2 = #{me_address2},
			me_agency_type = #{me_agency_type},
			me_agency = #{me_agency},
			me_department = #{me_department},
			me_position = #{me_position},
			
			modi_date 	= SYSDATE()		,
			modi_id 	= #{modi_id}		,
			modi_ip 	= #{modi_ip}
		<include refid="BaseWhere"/>
		AND me_idx = #{me_idx}
	</update>
	
	<!-- 회원 삭제 -->
	<update id="MemberManageDAOdeleteMemberVO" parameterType="MemberVO">
		UPDATE tbl_member SET
			del_yn		= 'Y'			,
			modi_date 	= SYSDATE()		,
			modi_id 	= #{modi_id}		,
			modi_ip 	= #{modi_ip}
		<include refid="BaseWhere"/>
		AND me_idx = #{me_idx}
	</update>
	
	<!-- 아이디 중복 체크 -->
	<select id="MemberManageDAOgetMemberIdCnt" parameterType="MemberVO" resultType="java.lang.Integer" >
		SELECT 
			COUNT(*)
		FROM tbl_member 
		WHERE me_id = #{me_id}
	</select>
	
	<!-- 권한 목록 -->
	<select id="MemberManageDAOgetAuthList" parameterType="java.util.HashMap"  resultType="CommonCodeVO">
		SELECT 
			auth_code AS main_code,
			auth_title AS code_name
		FROM tbl_auth
		<include refid="BaseWhere"/>
	</select>	
	
	<!-- 비밀번호 변경 -->
	<update id="MemberManageDAOupdatePassword" parameterType="MemberVO">
		UPDATE tbl_member SET
			<if test="me_pwd != null and me_pwd !=''">
					me_pwd	=	#{me_pwd},
			</if>
			modi_date 	= SYSDATE()		,
			modi_id 	= #{modi_id}		,
			modi_ip 	= #{modi_ip}
		<include refid="BaseWhere"/>
		AND me_id = #{me_id}
	</update>
	
	
	
	<!--로그인 횟수 초기화-->
	<update id="MemberManageDAOloginCntReset" parameterType="MemberVO">
		UPDATE tbl_member SET
			me_fail_cnt = 0
		WHERE me_idx = #{me_idx}
	</update>
	
</mapper>